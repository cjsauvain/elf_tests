!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
InjectCode	InjectWoodySection/InjectCode.c	/^void	InjectCode(int fd)$/;"	f
Injection	InjectWoodySection/InjectCode.c	/^static void	Injection(int fd, char *shellcode, int shellcode_len)$/;"	f	file:
find_sh_name	get_sh_name.c	/^static off_t	find_sh_name(int fd, Elf64_Shdr shstrtab, char *sh_name_str)$/;"	f	file:
getCaveOffset	InjectWoodySection/getTextSectionCodeCave.c	/^static off_t	getCaveOffset(int fd, off_t sectionSize)$/;"	f	file:
getImageBase	getImageBase.c	/^Elf64_Addr	getImageBase(int fd, Elf64_Ehdr ehdr)$/;"	f
getOffset	InjectWoodySection/getTextSectionCodeCave.c	/^static off_t	getOffset(int fd, uint16_t e_shnum, Elf64_Off e_shoff, \\$/;"	f	file:
getSectionOffset	InjectWoodySection/getTextSectionCodeCave.c	/^static off_t	getSectionOffset(int fd, Elf64_Ehdr ehdr, char *sh_name_str, off_t *sectionSize)$/;"	f	file:
getTextSectionCodeCave	InjectWoodySection/getTextSectionCodeCave.c	/^off_t	getTextSectionCodeCave(int fd, Elf64_Ehdr ehdr)$/;"	f
get_cave	InjectWoodySection/getTextSectionCodeCave.c	/^static t_offset	get_cave(char *buffer, off_t sectionSize)$/;"	f	file:
get_elf_hdr	get_elf_hdr.c	/^Elf64_Ehdr	get_elf_hdr(int fd)$/;"	f
get_file_size	file_operations.c	/^off_t	get_file_size(int fd)$/;"	f
get_sh_name	get_sh_name.c	/^off_t	get_sh_name(int fd, Elf64_Ehdr ehdr, char *sh_name_str)$/;"	f
get_size_offset	InjectWoodySection/getTextSectionCodeCave.c	/^static off_t	get_size_offset(off_t head, off_t end)$/;"	f	file:
injectAtEndOfFile	InjectWoodySection/injectAtEndOfFile.c	/^void injectAtEndOfFile(int fd, char *shellcode, int shellcode_len)$/;"	f
main	main.c	/^int	main(int argc, char **argv)$/;"	f
modify_entrypoint	modify_entrypoint.c	/^void	modify_entrypoint(int fd)$/;"	f
open_file	file_operations.c	/^int	open_file(char *path)$/;"	f
read_file	file_operations.c	/^void	read_file(int fd, char *buffer, int file_size)$/;"	f
updateProgramHeaderTable	InjectWoodySection/injectAtEndOfFile.c	/^static void	updateProgramHeaderTable(int fd, off_t file_size, Elf64_Ehdr ehdr, int shellcode_len)$/;"	f	file:
updateSectionHeaderTable	InjectWoodySection/injectAtEndOfFile.c	/^static uint32_t	updateSectionHeaderTable(int fd, off_t file_size, Elf64_Ehdr ehdr, int shellcode_len)$/;"	f	file:
update_offset_struct	InjectWoodySection/getTextSectionCodeCave.c	/^static void	update_offset_struct(t_offset *offset, int index)$/;"	f	file:
update_section	InjectWoodySection/injectAtEndOfFile.c	/^static void	update_section(int fd, Elf64_Shdr *shstrtab, uint32_t sh_name)$/;"	f	file:
update_shstrtab_section	InjectWoodySection/injectAtEndOfFile.c	/^static void	update_shstrtab_section(int fd, Elf64_Ehdr ehdr, uint32_t sh_name)$/;"	f	file:
write_file	file_operations.c	/^void	write_file(int fd, Elf64_Ehdr *ehdr)$/;"	f
write_updated_sections_name	InjectWoodySection/injectAtEndOfFile.c	/^static void	write_updated_sections_name(int fd, Elf64_Shdr *shstrtab, \\$/;"	f	file:
