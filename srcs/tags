!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/nfs/homes/jsauvain/documents/elf_tests/srcs/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
InjectCode	InjectCode.c	/^void	InjectCode(int fd, Elf64_Ehdr ehdr, Elf64_Addr old_entry)$/;"	f	typeref:typename:void
Injection	InjectCode.c	/^static void	Injection(int fd, Elf64_Ehdr ehdr, char *shellcode)$/;"	f	typeref:typename:void	file:
add_new_PH_entry	InjectWoodySection/add_new_PH_entry.c	/^void	add_new_PH_entry(int fd, Elf64_Ehdr ehdr)$/;"	f	typeref:typename:void
change_PHT_position	InjectWoodySection/change_PHT_position.c	/^void	change_PHT_position(int fd, Elf64_Ehdr *ehdr)$/;"	f	typeref:typename:void
getCaveOffset	getTextSectionCodeCave.c	/^static off_t	getCaveOffset(int fd, off_t sectionSize)$/;"	f	typeref:typename:off_t	file:
getImageBase	modify_entrypoint.c	/^Elf64_Addr	getImageBase(int fd, Elf64_Ehdr ehdr)$/;"	f	typeref:typename:Elf64_Addr
getOffset	getTextSectionCodeCave.c	/^static off_t	getOffset(Elf64_Shdr *shdr, uint16_t shnum, uint32_t text_sh_name, off_t *sectionSi/;"	f	typeref:typename:off_t	file:
getTextSectionCodeCave	getTextSectionCodeCave.c	/^off_t	getTextSectionCodeCave(int fd, Elf64_Ehdr ehdr)$/;"	f	typeref:typename:off_t
getTextSectionOffset	getTextSectionCodeCave.c	/^static off_t	getTextSectionOffset(int fd, Elf64_Ehdr ehdr, off_t *sectionSize)$/;"	f	typeref:typename:off_t	file:
get_PHT	InjectWoodySection/change_PHT_position.c	/^static void	get_PHT(int fd, Elf64_Ehdr *ehdr, Elf64_Phdr *phdr)$/;"	f	typeref:typename:void	file:
get_cave	getTextSectionCodeCave.c	/^static t_offset	get_cave(char *buffer, off_t sectionSize)$/;"	f	typeref:typename:t_offset	file:
get_elf_hdr	get_elf_hdr.c	/^Elf64_Ehdr	get_elf_hdr(int fd)$/;"	f	typeref:typename:Elf64_Ehdr
get_file_size	file_operations.c	/^off_t	get_file_size(int fd)$/;"	f	typeref:typename:off_t
get_sh_name	getTextSectionCodeCave.c	/^static off_t	get_sh_name(int fd, Elf64_Shdr shstrtab)$/;"	f	typeref:typename:off_t	file:
get_size_offset	getTextSectionCodeCave.c	/^static off_t	get_size_offset(off_t head, off_t end)$/;"	f	typeref:typename:off_t	file:
injectWoodySection	InjectWoodySection/InjectWoodySection.c	/^void	injectWoodySection(int fd, Elf64_Ehdr ehdr, char *shellcode)$/;"	f	typeref:typename:void
main	codeInjection.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
modify_entrypoint	modify_entrypoint.c	/^Elf64_Ehdr	modify_entrypoint(int fd, Elf64_Addr *old_entry)$/;"	f	typeref:typename:Elf64_Ehdr
open_file	file_operations.c	/^int	open_file(char *path)$/;"	f	typeref:typename:int
put_PHT_at_end_of_file	InjectWoodySection/change_PHT_position.c	/^static void	put_PHT_at_end_of_file(int fd, Elf64_Ehdr *ehdr, Elf64_Phdr *phdr)$/;"	f	typeref:typename:void	file:
read_file	file_operations.c	/^void	read_file(int fd, char *buffer, int file_size)$/;"	f	typeref:typename:void
replace_PHT_by_zeros	InjectWoodySection/change_PHT_position.c	/^static void	replace_PHT_by_zeros(int fd, Elf64_Ehdr *ehdr)$/;"	f	typeref:typename:void	file:
update_offset_struct	getTextSectionCodeCave.c	/^static void	update_offset_struct(t_offset *offset, int index)$/;"	f	typeref:typename:void	file:
write_file	file_operations.c	/^void	write_file(int fd, Elf64_Ehdr *ehdr)$/;"	f	typeref:typename:void
